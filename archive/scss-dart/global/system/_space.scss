@if not global-variable-exists('spaces') {
  @error '$spaces variable is not defined.';
}

@if not type-of($spaces) == 'map' {
  @error '$spaces is not a map.';
}

@function space($__variant: 'default') {
  @if not map-has-key($spaces, $__variant) {
    @error 'space: Variant "#{$__variant}" is not defined.';
  }

  @return map-get($spaces, $__variant);
}

@mixin -spaceModifiers($__className, $__property, $__modifier, $__value) {
  .--#{$__className}t-#{$__modifier} {
    #{$__property}-top: $__value;
  }
  .--#{$__className}b-#{$__modifier} {
    #{$__property}-bottom: $__value;
  }
  .--#{$__className}y-#{$__modifier} {
    #{$__property}-top: $__value;
    #{$__property}-bottom: $__value;
  }
  .--#{$__className}l-#{$__modifier} {
    #{$__property}-left: $__value;
  }
  .--#{$__className}r-#{$__modifier} {
    #{$__property}-right: $__value;
  }
  .--#{$__className}x-#{$__modifier} {
    #{$__property}-left: $__value;
    #{$__property}-right: $__value;
  }
  .--#{$__className}-#{$__modifier} {
    #{$__property}: $__value;
  }
}

// Generate margins and paddings global modifier classes.
@if $GENERATE_SPACE_CLASSES == true {
  @each $__size, $__value in $spaces {
    @include -spaceModifiers('p', 'padding', $__size, $__value);
    @include -spaceModifiers('m', 'margin', $__size, $__value);
  }

  @include -spaceModifiers('p', 'padding', 'auto', auto);
  @include -spaceModifiers('p', 'padding', 'none', none);

  @include -spaceModifiers('m', 'margin', 'auto', auto);  
  @include -spaceModifiers('m', 'margin', 'none', none);
}
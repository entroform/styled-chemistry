
@if not variable-exists('theme.colors') {
  @error '$colors variable is not defined.';
}

@if not type-of(theme.$colors) == 'map'{
  @error '$colors variable is not a map.';
}

@function color($__color, $__variant: 'default') {
  @if not map-has-key($colors, $__color) {
    @error 'color: Color "#{$__color}" is not defined.';
  }

  $__variants: map-get($colors, $__color);

  @if type-of($__variants) == 'color' {
    @return $__variants;
  } @else if type-of($__variants) == 'map' {
    @if not map-has-key($__variants, $__variant) {
      @error 'color: Variant "#{$__variant}", is not defined.';
    }

    $__result: map-get($__variants, $__variant);

    @if not type-of($__result) == 'color' {
      @error 'color: Variant "#{$__result}", is not of type color.';
    }

    @return $__result;
  } @else {
    @error 'color: Variant "#{$__variant}" value is not a map or color.';
  }
}

// Generate bg and color

@mixin colorModifier($__className, $__property, $__modifier, $__value) {
  .--#{$__className}t-#{$__modifier} {
    #{$__property}-top: $__value;
  }
  .--#{$__className}b-#{$__modifier} {
    #{$__property}-bottom: $__value;
  }
  .--#{$__className}y-#{$__modifier} {
    #{$__property}-top: $__value;
    #{$__property}-bottom: $__value;
  }
  .--#{$__className}l-#{$__modifier} {
    #{$__property}-left: $__value;
  }
  .--#{$__className}r-#{$__modifier} {
    #{$__property}-right: $__value;
  }
  .--#{$__className}x-#{$__modifier} {
    #{$__property}-left: $__value;
    #{$__property}-right: $__value;
  }
  .--#{$__className}-#{$__modifier} {
    #{$__property}: $__value;
  }
}

@if $GENERATE_COLOR_MODIFIERS == true {
  @each $color, $variant in theme.colors $variant
    .--bg-#{$color}-#{$variant} {
      background-color: #{$value};
    }
  }
}